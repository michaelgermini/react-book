# React Book - GitHub Pages Activation Script (PowerShell)
# Ce script aide √† activer GitHub Pages pour le repository

Write-Host "üåê Activation de GitHub Pages pour React Book" -ForegroundColor Green
Write-Host "==============================================" -ForegroundColor Green
Write-Host ""

# Configuration
$REPO_OWNER = "michaelgermini"
$REPO_NAME = "react-book"
$GITHUB_API_URL = "https://api.github.com"

Write-Host "üìã M√©thodes d'activation disponibles :" -ForegroundColor Cyan
Write-Host "1. üîó Lien direct vers les param√®tres GitHub Pages" -ForegroundColor Yellow
Write-Host "2. ü§ñ Activation automatique via API (n√©cessite un token)" -ForegroundColor Yellow
Write-Host ""

# Option 1 : Lien direct
Write-Host "üîó Lien direct vers GitHub Pages :" -ForegroundColor Green
Write-Host "https://github.com/$REPO_OWNER/$REPO_NAME/settings/pages" -ForegroundColor White
Write-Host ""

# Instructions manuelles
Write-Host "üìã √âtapes manuelles :" -ForegroundColor Cyan
Write-Host "1. Cliquez sur le lien ci-dessus" -ForegroundColor White
Write-Host "2. Dans 'Source', s√©lectionnez 'Deploy from a branch'" -ForegroundColor White
Write-Host "3. Dans 'Branch', s√©lectionnez 'main'" -ForegroundColor White
Write-Host "4. Dans 'Folder', s√©lectionnez '/(root)'" -ForegroundColor White
Write-Host "5. Cliquez sur 'Save'" -ForegroundColor White
Write-Host ""

# Option 2 : Activation automatique
$useApi = Read-Host "ü§ñ Voulez-vous essayer l'activation automatique ? (y/N)"

if ($useApi -eq "y" -or $useApi -eq "Y") {
    Write-Host ""
    Write-Host "üí° Pour cr√©er un token GitHub :" -ForegroundColor Cyan
    Write-Host "1. Allez sur : https://github.com/settings/tokens" -ForegroundColor White
    Write-Host "2. Cliquez sur 'Generate new token'" -ForegroundColor White
    Write-Host "3. S√©lectionnez 'repo' et 'workflow' permissions" -ForegroundColor White
    Write-Host "4. Copiez le token g√©n√©r√©" -ForegroundColor White
    Write-Host ""
    
    $token = Read-Host "üîë Entrez votre token GitHub (ou appuyez sur Entr√©e pour ignorer)"
    
    if ($token) {
        Write-Host "üîÑ Activation de GitHub Pages via API..." -ForegroundColor Yellow
        
        $headers = @{
            "Authorization" = "token $token"
            "User-Agent" = "React-Book-GitHub-Pages-Activator"
            "Accept" = "application/vnd.github.v3+json"
            "Content-Type" = "application/json"
        }
        
        $body = @{
            source = @{
                type = "branch"
                branch = "main"
            }
        } | ConvertTo-Json
        
        try {
            $response = Invoke-RestMethod -Uri "$GITHUB_API_URL/repos/$REPO_OWNER/$REPO_NAME/pages" -Method POST -Headers $headers -Body $body
            
            Write-Host "‚úÖ GitHub Pages activ√© avec succ√®s !" -ForegroundColor Green
            Write-Host "üåê Votre site sera disponible sur : https://$REPO_OWNER.github.io/$REPO_NAME" -ForegroundColor White
            Write-Host "‚è±Ô∏è  Le d√©ploiement peut prendre quelques minutes..." -ForegroundColor Yellow
        }
        catch {
            Write-Host "Erreur lors de l'activation :" -ForegroundColor Red
            Write-Host $_.Exception.Message -ForegroundColor Red
            Write-Host ""
            Write-Host "üìã Utilisez la m√©thode manuelle :" -ForegroundColor Cyan
            Write-Host "https://github.com/$REPO_OWNER/$REPO_NAME/settings/pages" -ForegroundColor White
        }
    }
    else {
        Write-Host "‚ö†Ô∏è  Aucun token fourni. Utilisez la m√©thode manuelle." -ForegroundColor Yellow
    }
}

Write-Host ""
Write-Host "üåê Votre site sera sur : https://$REPO_OWNER.github.io/$REPO_NAME" -ForegroundColor Green
Write-Host ""
Write-Host "‚úÖ Activation termin√©e !" -ForegroundColor Green
